variables:
 GIT_STRATEGY: none

stages:
 - build
 - doc
 - test

west_build:
 tags: [rcc,docker,node-01]
 stage: build
 image: ubuntu:latest
 before_script:
   - apt-get update > /dev/null
   - apt-get install -qq git > /dev/null 
   - apt-get install -qq build-essential gfortran wget python-pip python-dev > /dev/null
   - apt-get install -qq libopenmpi-dev openmpi-bin > /dev/null
   - apt-get install -qq libblas-dev liblapack-dev fftw3 fftw3-dev pkg-config > /dev/null
 script:
   - git clone -b 'qe-6.1.0' --single-branch --depth 1 https://gitlab.com/QEF/q-e.git QEDIR
   - cd QEDIR
   - git describe
   - ./configure
   - make -j pw
   - ls bin
   - git clone -b $CI_COMMIT_REF_NAME $CI_REPOSITORY_URL West
   - cd West
   - git describe
   - make
   - ls ../bin 

west_test_gamma:
 tags: [rcc,docker,node-01]
 stage: test
 image: ubuntu:latest
 before_script:
   - apt-get update > /dev/null
   - apt-get install -qq git > /dev/null 
   - apt-get install -qq build-essential gfortran wget python-pip python-dev > /dev/null
   - apt-get install -qq libopenmpi-dev openmpi-bin > /dev/null
   - apt-get install -qq libblas-dev liblapack-dev fftw3 fftw3-dev pkg-config > /dev/null
 script:
   - git clone -b 'qe-6.1.0' --single-branch --depth 1 https://gitlab.com/QEF/q-e.git QEDIR
   - cd QEDIR
   - ./configure FFLAGS="-ffpe-summary=none" > /dev/null
   - make -j pw > /dev/null
   - git clone -b $CI_COMMIT_REF_NAME $CI_REPOSITORY_URL West
   - cd West 
   - make > /dev/null
   - cd test-suite 
   - make NP=28 NI=1 NT=1 

west_doc_build:
 tags: [rcc,docker,node-01]
 stage: doc
 image: gcc:4.9.4
 before_script:
   - apt-get update > /dev/null
   - apt-get install -qq build-essential > /dev/null
   - apt-get install -qq apt-utils > /dev/null
   - apt-get install -qq wget git > /dev/null
   - apt-get -qq install vim > /dev/null 
   - export TZ="US/Central"
   - rm -f /etc/localtime
   - cp  /usr/share/zoneinfo/$TZ  /etc/localtime
   - apt-get install -qq texlive-latex-base > /dev/null
   - apt-get install -qq latex2html > /dev/null
   - apt-get install -qq pandoc > /dev/null
   - cd /opt
   - export PY_VERSION="3.5.4"
   - wget https://www.python.org/ftp/python/$PY_VERSION/Python-$PY_VERSION.tgz
   - tar -xzvf Python-$PY_VERSION.tgz
   - cd Python-$PY_VERSION 
   - export PY_DIR="/opt/python"
   - ./configure --prefix $PY_DIR
   - make 
   - make install
   - ln -s $PY_DIR/bin/python3.5 $PY_DIR/bin/python
   - export PATH=$PY_DIR/bin:$PATH
   - wget https://bootstrap.pypa.io/get-pip.py
   - python get-pip.py
   - which python
   - which pip 
   - pip install -U sphinx
   - pip install -U sphinx_rtd_theme
 script:
   - git clone -b $CI_COMMIT_REF_NAME $CI_REPOSITORY_URL West
   - cd West
   - git describe
   - cd doc
   - make html

